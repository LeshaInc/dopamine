/*
 * This file is generated by jOOQ.
 */
package ru.sigsegv.dopamine.generated.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import ru.sigsegv.dopamine.generated.tables.Student;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StudentRecord extends UpdatableRecordImpl<StudentRecord> implements Record3<Integer, String, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.student.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.student.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.student.full_name</code>.
     */
    public void setFullName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.student.full_name</code>.
     */
    public String getFullName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.student.study_group_id</code>.
     */
    public void setStudyGroupId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.student.study_group_id</code>.
     */
    public Integer getStudyGroupId() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, String, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Student.STUDENT.ID;
    }

    @Override
    public Field<String> field2() {
        return Student.STUDENT.FULL_NAME;
    }

    @Override
    public Field<Integer> field3() {
        return Student.STUDENT.STUDY_GROUP_ID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getFullName();
    }

    @Override
    public Integer component3() {
        return getStudyGroupId();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getFullName();
    }

    @Override
    public Integer value3() {
        return getStudyGroupId();
    }

    @Override
    public StudentRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public StudentRecord value2(String value) {
        setFullName(value);
        return this;
    }

    @Override
    public StudentRecord value3(Integer value) {
        setStudyGroupId(value);
        return this;
    }

    @Override
    public StudentRecord values(Integer value1, String value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StudentRecord
     */
    public StudentRecord() {
        super(Student.STUDENT);
    }

    /**
     * Create a detached, initialised StudentRecord
     */
    public StudentRecord(Integer id, String fullName, Integer studyGroupId) {
        super(Student.STUDENT);

        setId(id);
        setFullName(fullName);
        setStudyGroupId(studyGroupId);
    }
}
